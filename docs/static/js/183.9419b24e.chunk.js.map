{"version":3,"file":"static/js/183.9419b24e.chunk.js","mappings":"6MAAaA,EAAa,SAAbA,EAAiDC,GACxDC,MAAMC,QAAQF,GAChBA,EAAIG,SAAQ,SAACC,GAAD,OAAUL,EAAWK,MAGhB,kBAARJ,GAAqBC,MAAMC,QAAQF,IAAe,MAAPA,GACpDK,OAAOC,KAAKN,GAAKG,SAAQ,SAACI,GACR,MAAZP,EAAIO,UACCP,EAAIO,GAGW,kBAAbP,EAAIO,IACS,kBAAbP,EAAIO,IACS,mBAAbP,EAAIO,IAGbR,EAAWC,EAAIO,Q,6BCdVC,EAAkC,CAC7CC,KAAM,CACJC,SAAU,WACVC,MAAO,QACPC,IAAK,MACLC,UAAW,iBACXC,QAAS,GACTC,WAAY,S,SCLVC,EAAgB,kBAAM,SAACC,EAAA,EAAD,CAAYC,GAAIV,EAAOC,KAAvB,oBAE5B,GAAeU,EAAAA,EAAAA,MAAKH,GCJPR,EAAkC,CAC7CC,KAAM,CACJW,MAAO,OACPC,OAAQ,OACRX,SAAU,WACVY,QAAS,OACTC,cAAe,SACfR,WAAY,QAEdS,MAAO,CACLC,SAAU,OACVC,WAAY,KAEdC,QAAS,CACPC,GAAI,MACJC,YAAa,kBAEfC,QAAS,CACPV,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,cAAe,SACfQ,eAAgB,UAElBC,MAAO,CACLP,SAAU,OACVC,WAAY,MCvBVO,EAAqC,SAAC,GAA4B,IAA1BT,EAAyB,EAAzBA,MAAOQ,EAAkB,EAAlBA,MAAOE,EAAW,EAAXA,KACpDC,GAAaC,EAAAA,EAAAA,UAAQ,WACzB,MAAa,MAATF,EACKF,EAAMK,eAAe,QAAS,CACnCC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IAGrB,GAAN,OAAUT,EAAMK,eAAe,QAAS,CACtCG,sBAAuB,EACvBC,sBAAuB,KAFzB,OAGKP,KACJ,CAACA,EAAMF,IACV,OACE,UAACU,EAAA,EAAD,CAAKxB,GAAIV,EAAAA,KAAT,WACE,SAACS,EAAA,EAAD,CAAYC,GAAIV,EAAAA,MAAhB,SAA+BgB,KAC/B,SAACmB,EAAA,EAAD,CAASzB,GAAIV,EAAAA,WACb,SAACkC,EAAA,EAAD,CAAKxB,GAAIV,EAAAA,QAAT,UACE,SAACS,EAAA,EAAD,CAAYC,GAAIV,EAAAA,MAAhB,SAA+B2B,OAEjC,SAAC,EAAD,QAKN,GAAehB,EAAAA,EAAAA,MAAKc,G,mozHC9BPzB,EAAkC,CAC7CC,KAAM,CACJW,MAAO,OACPC,OAAQ,oBACRX,SAAU,WACV,cAAe,CACbkC,OAAQ,OACRC,aAAc,EACdC,GAAI,QAEN,oCAAqC,CACnCC,WAAY,OACZC,QAAS,sBAEX,yBAA0B,CACxBD,WAAY,OACZC,QAAS,mBACT,mBAAoB,CAClBD,WAAY,QAEd,yBAA0B,CACxBC,QAAS,qBAGb,oBAAqB,CACnB,kBAAmB,CACjBC,WAAY,qCACZ,UAAW,CACTF,WAAY,OACZC,QAAS,mBACT,mBAAoB,CAClBD,WAAY,QAEd,yBAA0B,CACxBA,WAAY,OACZC,QAAS,yBAKjB,mBAAoB,CAClBD,WAAY,SAGhBG,OAAQ,CACN9B,MAAO,OACPE,QAAS,OACTS,eAAgB,gBAChBoB,GAAI,OAEN3B,MAAO,CACLC,SAAU,OACVC,WAAY,MC9CV0B,G,QAAkB,WACtB,IAAMC,GAAOjB,EAAAA,EAAAA,UAAQ,kBAAMkB,IAAqB,IAEhD,OACE,UAACZ,EAAA,EAAD,CAAKxB,GAAIV,EAAAA,KAAT,WACE,UAACkC,EAAA,EAAD,CAAKxB,GAAIV,EAAAA,OAAT,WACE,SAACS,EAAA,EAAD,CAAYC,GAAIV,EAAAA,MAAhB,0BACA,UAAC+C,EAAA,EAAD,CAAaC,KAAK,QAAQC,MAAM,YAAhC,WACE,SAACC,EAAA,EAAD,oBACA,SAACA,EAAA,EAAD,8BAGJ,UAAC,KAAD,CACEC,YAAa,SAACC,GAAD,OAAOA,EAAEC,mBACtBC,YAAU,EACVC,aAAW,EACXV,KAAMA,EAJR,WAME,UAAC,KAAD,CAAQjC,MAAO,GAAI4C,MAAM,SAASC,OAAK,EAAvC,WACE,SAAC,KAAD,kBACA,SAAC,KAAD,CAAMC,QAAQ,WAGhB,UAAC,KAAD,CAAQ9C,MAAO,IAAf,WACE,SAAC,KAAD,yBACA,SAAC,KAAD,CAAM8C,QAAQ,kBAGhB,UAAC,KAAD,CAAQ9C,MAAO,IAAf,WACE,SAAC,KAAD,0BACA,SAAC,KAAD,CAAM8C,QAAQ,mBAGhB,UAAC,KAAD,CAAQ9C,MAAO,IAAf,WACE,SAAC,KAAD,wBACA,SAAC,KAAD,CAAM8C,QAAQ,uBAGhB,UAAC,KAAD,CAAQ9C,MAAO,IAAf,WACE,SAAC,KAAD,sBACA,SAAC,KAAD,CAAM8C,QAAQ,sBAGhB,UAAC,KAAD,CAAQC,SAAU,IAAKC,SAAU,EAAjC,WACE,SAAC,KAAD,uBACA,SAAC,KAAD,CAAMF,QAAQ,0BAGlB,SAAC,EAAD,SAKN,GAAe/C,EAAAA,EAAAA,MAAKiC,G,SC3DP5C,EAAkC,CAC7CC,KAAM,CACJW,MAAO,OACPC,OAAQ,oBACRX,SAAU,YAEZwC,OAAQ,CACN9B,MAAO,qBACPE,QAAS,OACTS,eAAgB,iBAElBsC,QAAS,CACPjD,MAAO,OACPC,OAAQ,QAEVG,MAAO,CACLC,SAAU,OACVC,WAAY,MCZV4C,EAAiB,WACrB,IAAMC,GAAcC,EAAAA,EAAAA,cAClB,SAACnB,EAAuB7B,GAAxB,MAA2C,CACzCiD,GAAIjD,EACJ6B,KAAOC,EAAAA,KACA,SAACoB,GAAD,MAAQ,CACXC,EAAG,IAAIC,KAAKF,EAAEG,WACdC,EAAGJ,EAAErB,OAEN0B,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEL,EAAEO,UAAYD,EAAEN,EAAEO,gBAExC,IAGIC,GAAY/C,EAAAA,EAAAA,UAChB,iBAAM,CACJmC,EAAY,gBAAiB,UAC7BA,EAAY,aAAc,iBAE5B,CAACA,IAGH,OACE,UAAC7B,EAAA,EAAD,CAAKxB,GAAIV,EAAAA,KAAT,WACE,UAACkC,EAAA,EAAD,CAAKxB,GAAIV,EAAAA,OAAT,WACE,SAACS,EAAA,EAAD,CAAYC,GAAIV,EAAAA,MAAhB,0BACA,UAAC+C,EAAA,EAAD,CAAaC,KAAK,QAAQC,MAAM,YAAhC,WACE,SAACC,EAAA,EAAD,uBACA,SAACA,EAAA,EAAD,uBACA,SAACA,EAAA,EAAD,gCAGJ,SAAChB,EAAA,EAAD,CAAKxB,GAAIV,EAAAA,QAAgBmD,YAAa,SAACC,GAAD,OAAOA,EAAEC,mBAA/C,UACE,SAAC,KAAD,CACER,KAAM8B,EACNC,OAAQ,CAAExE,IAAK,GAAID,MAAO,IAAK0E,OAAQ,GAAIC,KAAM,IACjDC,OAAQ,CACNC,KAAM,OACNC,OAAQ,WACRC,UAAW,OAEbC,OAAQ,CAAEH,KAAM,SAAUI,SAAS,EAAOC,IAAK,EAAGC,IAAK,KACvDC,QAAQ,SACRC,QAAQ,gBACRC,MAAM,YACNC,QAAS,KACTC,UAAW,KACXC,WAAY,CACVC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdd,OAAQ,QACRe,OAAQ,OACRC,aAAc,GACdC,eAAgB,UAElBC,SAAU,CACRN,SAAU,EACVC,YAAa,EACbC,aAAc,EACdd,OAAQ,MACRe,OAAQ,QACRC,cAAe,GACfC,eAAgB,SAChBE,WAAY,CAAC,EAAG,GAAI,MAEtBC,aAAa,EACbC,OAAQ,CAAEC,OAAQ,UAClBC,UAAW,EACXC,UAAW,EACXC,WAAY,CAAEC,MAAO,cACrBC,iBAAkB,EAClBC,iBAAkB,CAAEC,KAAM,cAI1BC,QAAS,CACP,CACEC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,cAAe,gBACfC,UAAW,GACXC,WAAY,GACZC,YAAa,IACbC,WAAY,GACZC,YAAa,SACbC,kBAAmB,oBACnBC,QAAS,CACP,CACEC,GAAI,QACJhG,MAAO,CACLiG,eAAgB,qBAChBN,YAAa,YAQ3B,SAAC,EAAD,QAKN,GAAe9G,EAAAA,EAAAA,MAAKmD,G,+DC9GdkE,EAAmC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,GAAY,YAC7DC,GAAmBC,EAAAA,EAAAA,eAAcC,EAAAA,YACvC,OACE,SAACnG,EAAA,EAAD,CACExB,GAAI,CACF,4CAA6C,CAC3C4H,gBAAiB,cACjBC,YAAa,MACbC,YAAa,SACbnH,YAAa,eACbgB,aAAc,SAPpB,UAWE,SAAC8F,GAAD,gBACEM,YAAa,CAAEC,IAAK,EAAGC,GAAI,IAAKC,GAAI,IAAKC,GAAI,KAAMC,GAAI,OACnDZ,GAFN,aAIGD,QAMT,GAAetH,EAAAA,EAAAA,MAAKqH,G,mCC1Bde,GAA2BC,EAAAA,EAAAA,aAC/B,WAA2CC,GAAS,IAAjDhB,EAAgD,EAAhDA,SAAUnG,EAAsC,EAAtCA,MAAOoH,EAA+B,EAA/BA,UAAchB,GAAiB,YACzCiB,GAAaC,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAQA,EAAGC,MAAvCH,SACR,OACE,SAACjH,EAAA,GAAD,gBACEJ,MAAOA,EACPoH,UAAWA,EACXxI,GAAI,CACFE,MAAO,OACPC,OAAQ,OACR0I,EAAG,OACH9G,WAAY,YACZ+G,UAAWL,EACP,mDACA,kDACJ9G,aAAc,EACdiG,gBAAiB,qBACjB,4BAA6B,CAC3BzD,OAAQ,gBACR1E,MAAO,kBAGXsJ,UAAU,MACVR,IAAKA,GACDf,GApBN,aAsBGD,QAMT,GAAetH,EAAAA,EAAAA,MAAKoI,GC7BdW,EAAqD,SAAC,GAAD,IACzDC,EADyD,EACzDA,QACAC,EAFyD,EAEzDA,cAFyD,OAIzD,UAAC,EAAD,CACEC,KAAM,CAAEnB,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzClE,OAAQ,CAAC,GAAI,IACbkF,UAAW,IACXC,WAAS,EACTJ,QAASA,EACTK,eAAgBJ,EAChBK,oBAAkB,EAPpB,WASE,SAAC,EAAD,WACE,SAAC,EAAD,CAAajJ,MAAM,eAAeQ,MAAO,KAAME,KAAK,OAD1C,aAGZ,SAAC,EAAD,WACE,SAAC,EAAD,CAAaV,MAAM,eAAeQ,MAAO,GAAIE,KAAK,OADxC,aAGZ,SAAC,EAAD,WACE,SAAC,EAAD,CAAaV,MAAM,eAAeQ,MAAO,OAAQE,KAAK,OAD5C,aAGZ,SAAC,EAAD,WACE,SAAC,EAAD,KADU,iBAGZ,SAAC,EAAD,WACE,SAAC,EAAD,KADU,oBAMhB,GAAef,EAAAA,EAAAA,MAAK+I,GC3BdQ,EAAoB,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcjB,EAAAA,EAAAA,IAAekB,EAAAA,IAC7BV,GAAgB5F,EAAAA,EAAAA,cACpB,SAACuG,EAAMC,GACLjL,EAAWiL,IACPC,EAAAA,EAAAA,SAAQJ,EAAaG,GACvBL,GAASO,EAAAA,EAAAA,OAGXP,GAASQ,EAAAA,EAAAA,IAAgBH,MAE3B,CAACL,EAAUE,IAGb,OACE,SAAC,EAAD,CAAqBV,QAASU,EAAaT,cAAeA,KAI9D,GAAejJ,EAAAA,EAAAA,MAAKuJ,G,UC3BdU,EAAW,kBACf,iCACE,SAACC,EAAA,EAAD,CAAa7J,MAAM,UACnB,SAAC,EAAD,QAIJ,GAAeL,EAAAA,EAAAA,MAAKiK","sources":["lib/clearUndef.ts","UI/atoms/WaterMark/styles.ts","UI/atoms/WaterMark/WaterMark.tsx","UI/atoms/ValueWidget/styles.ts","UI/atoms/ValueWidget/ValueWidget.tsx","UI/molecules/AgentsTable/styles.ts","UI/molecules/AgentsTable/AgentsTable.tsx","UI/molecules/TotalGraph/styles.ts","UI/molecules/TotalGraph/TotalGraph.tsx","UI/templates/DragLayout/DragLayout.tsx","UI/templates/NeuBox/NeuBox.tsx","UI/organisms/HomeDashboard/HomeDashboardLayout.tsx","UI/organisms/HomeDashboard/HomeDashboard.tsx","pages/Home/Home.tsx"],"sourcesContent":["export const cleanUndef = <T extends Record<string, unknown>>(obj: T): void => {\n  if (Array.isArray(obj)) {\n    obj.forEach((item) => cleanUndef(item));\n    return;\n  }\n  if (typeof obj === 'object' && !Array.isArray(obj) && obj != null) {\n    Object.keys(obj).forEach((key) => {\n      if (obj[key] == null) {\n        delete obj[key];\n      } else if (\n        !(\n          typeof obj[key] === 'string' ||\n          typeof obj[key] === 'number' ||\n          typeof obj[key] === 'boolean'\n        )\n      ) {\n        cleanUndef(obj[key] as Record<string, unknown>);\n      }\n    });\n  }\n};\n","import { SxProps } from '@mui/material';\n\nexport const styles: Record<string, SxProps> = {\n  root: {\n    position: 'absolute',\n    right: '-20px',\n    top: '50%',\n    transform: 'rotate(270deg)',\n    opacity: 0.1,\n    userSelect: 'none',\n  },\n};\n","import { Typography } from '@mui/material';\nimport { FC, memo } from 'react';\nimport { styles } from './styles';\n\nconst WaterMark: FC = () => <Typography sx={styles.root}>Obyte</Typography>;\n\nexport default memo(WaterMark);\n","import { SxProps } from '@mui/material';\n\nexport const styles: Record<string, SxProps> = {\n  root: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    userSelect: 'none',\n  },\n  title: {\n    fontSize: '18px',\n    fontWeight: 300,\n  },\n  divider: {\n    mt: '5px',\n    borderColor: 'secondary.main',\n  },\n  content: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  value: {\n    fontSize: '30px',\n    fontWeight: 700,\n  },\n};\n","import { Box, Divider, Typography } from '@mui/material';\nimport { FC, memo, useMemo } from 'react';\nimport WaterMark from '../WaterMark/WaterMark';\nimport { styles } from './styles';\n\nconst ValueWidget: FC<IValueWidgetProps> = ({ title, value, unit }) => {\n  const printValue = useMemo(() => {\n    if (unit === '$') {\n      return value.toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n    }\n    return `${value.toLocaleString('en-US', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })}${unit}`;\n  }, [unit, value]);\n  return (\n    <Box sx={styles.root}>\n      <Typography sx={styles.title}>{title}</Typography>\n      <Divider sx={styles.divider} />\n      <Box sx={styles.content}>\n        <Typography sx={styles.value}>{printValue}</Typography>\n      </Box>\n      <WaterMark />\n    </Box>\n  );\n};\n\nexport default memo(ValueWidget);\n","import { SxProps } from '@mui/material';\n\nexport const styles: Record<string, SxProps> = {\n  root: {\n    width: '100%',\n    height: 'calc(100% - 31px)',\n    position: 'relative',\n    '& .rs-table': {\n      border: 'none',\n      borderRadius: 1,\n      pr: '15px',\n    },\n    '& .rs-table-cell-group-fixed-left': {\n      background: 'none',\n      bgcolor: 'background.default',\n    },\n    '& .rs-table-row-header': {\n      background: 'none',\n      bgcolor: 'background.paper',\n      '& .rs-table-cell': {\n        background: 'none',\n      },\n      '& .rs-table-cell-group': {\n        bgcolor: 'background.paper',\n      },\n    },\n    '& .rs-table-hover': {\n      '& .rs-table-row': {\n        transition: 'background-color 250ms ease-in-out',\n        '&:hover': {\n          background: 'none',\n          bgcolor: 'background.paper',\n          '& .rs-table-cell': {\n            background: 'none',\n          },\n          '& .rs-table-cell-group': {\n            background: 'none',\n            bgcolor: 'background.default',\n          },\n        },\n      },\n    },\n    '& .rs-table-cell': {\n      background: 'none',\n    },\n  },\n  header: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between',\n    mb: '5px',\n  },\n  title: {\n    fontSize: '18px',\n    fontWeight: 300,\n  },\n};\n","import { Box, Button, ButtonGroup, Typography } from '@mui/material';\nimport { FC, memo, useMemo } from 'react';\nimport { Cell, Column, HeaderCell, Table } from 'rsuite-table';\nimport WaterMark from 'UI/atoms/WaterMark/WaterMark';\nimport mock from '../../../mock/MOCK_DATA.json';\nimport { styles } from './styles';\nimport 'rsuite-table/dist/css/rsuite-table.min.css';\n\nconst AgentsTable: FC = () => {\n  const data = useMemo(() => mock as IMockData[], []);\n\n  return (\n    <Box sx={styles.root}>\n      <Box sx={styles.header}>\n        <Typography sx={styles.title}>Table Title</Typography>\n        <ButtonGroup size='small' color='secondary'>\n          <Button>some</Button>\n          <Button>controls</Button>\n        </ButtonGroup>\n      </Box>\n      <Table\n        onMouseDown={(e) => e.stopPropagation()}\n        fillHeight\n        virtualized\n        data={data}\n      >\n        <Column width={70} align='center' fixed>\n          <HeaderCell>Id</HeaderCell>\n          <Cell dataKey='id' />\n        </Column>\n\n        <Column width={130}>\n          <HeaderCell>Amount In</HeaderCell>\n          <Cell dataKey='amount_in' />\n        </Column>\n\n        <Column width={130}>\n          <HeaderCell>Amount Out</HeaderCell>\n          <Cell dataKey='amount_out' />\n        </Column>\n\n        <Column width={200}>\n          <HeaderCell>Triggers</HeaderCell>\n          <Cell dataKey='triggers_count' />\n        </Column>\n\n        <Column width={200}>\n          <HeaderCell>USD in</HeaderCell>\n          <Cell dataKey='usd_amount_in' />\n        </Column>\n\n        <Column minWidth={200} flexGrow={1}>\n          <HeaderCell>USD out</HeaderCell>\n          <Cell dataKey='usd_amount_out' />\n        </Column>\n      </Table>\n      <WaterMark />\n    </Box>\n  );\n};\n\nexport default memo(AgentsTable);\n","import { SxProps } from '@mui/material';\n\nexport const styles: Record<string, SxProps> = {\n  root: {\n    width: '100%',\n    height: 'calc(100% - 31px)',\n    position: 'relative',\n  },\n  header: {\n    width: 'calc(100% - 120px)',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  wrapper: {\n    width: '100%',\n    height: '100%',\n  },\n  title: {\n    fontSize: '18px',\n    fontWeight: 300,\n  },\n};\n","import { Box, Button, ButtonGroup, Typography } from '@mui/material';\nimport { FC, memo, useCallback, useMemo } from 'react';\nimport { ResponsiveLineCanvas } from '@nivo/line';\nimport WaterMark from 'UI/atoms/WaterMark/WaterMark';\nimport mock from '../../../mock/MOCK_DATA.json';\nimport { styles } from './styles';\n\nconst TotalGraph: FC = () => {\n  const processData = useCallback(\n    (data: keyof IMockData, title: string) => ({\n      id: title,\n      data: (mock as IMockData[])\n        .map((d) => ({\n          x: new Date(d.timestamp),\n          y: d[data],\n        }))\n        .sort((a, b) => a.x.getTime() - b.x.getTime()),\n    }),\n    []\n  );\n\n  const totalData = useMemo(\n    () => [\n      processData('usd_amount_in', 'USD in'),\n      processData('amount_out', 'Amount out'),\n    ],\n    [processData]\n  );\n\n  return (\n    <Box sx={styles.root}>\n      <Box sx={styles.header}>\n        <Typography sx={styles.title}>Chart Title</Typography>\n        <ButtonGroup size='small' color='secondary'>\n          <Button>30 days</Button>\n          <Button>90 days</Button>\n          <Button>All period</Button>\n        </ButtonGroup>\n      </Box>\n      <Box sx={styles.wrapper} onMouseDown={(e) => e.stopPropagation()}>\n        <ResponsiveLineCanvas\n          data={totalData}\n          margin={{ top: 20, right: 120, bottom: 50, left: 60 }}\n          xScale={{\n            type: 'time',\n            format: '%Y-%m-%d',\n            precision: 'day',\n          }}\n          yScale={{ type: 'linear', stacked: false, min: 0, max: 100 }}\n          yFormat=' >-.2f'\n          xFormat='time:%Y-%m-%d'\n          curve='monotoneX'\n          axisTop={null}\n          axisRight={null}\n          axisBottom={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            format: '%b %y',\n            legend: 'date',\n            legendOffset: 36,\n            legendPosition: 'middle',\n          }}\n          axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            format: '.2s',\n            legend: 'value',\n            legendOffset: -40,\n            legendPosition: 'middle',\n            tickValues: [0, 50, 100],\n          }}\n          enableGridX={false}\n          colors={{ scheme: 'paired' }}\n          lineWidth={1}\n          pointSize={0}\n          pointColor={{ theme: 'background' }}\n          pointBorderWidth={1}\n          pointBorderColor={{ from: 'serieColor' }}\n          //   useMesh={true}\n          //   gridXValues={[0, 20, 40, 60, 80, 100, 120]}\n          //   gridYValues={[0, 500, 1000, 1500, 2000, 2500]}\n          legends={[\n            {\n              anchor: 'bottom-right',\n              direction: 'column',\n              justify: false,\n              translateX: 134,\n              translateY: 7,\n              itemsSpacing: 3,\n              itemDirection: 'left-to-right',\n              itemWidth: 98,\n              itemHeight: 21,\n              itemOpacity: 0.75,\n              symbolSize: 11,\n              symbolShape: 'circle',\n              symbolBorderColor: 'rgba(0, 0, 0, .5)',\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemBackground: 'rgba(0, 0, 0, .03)',\n                    itemOpacity: 1,\n                  },\n                },\n              ],\n            },\n          ]}\n        />\n      </Box>\n      <WaterMark />\n    </Box>\n  );\n};\n\nexport default memo(TotalGraph);\n","import { Box } from '@mui/material';\nimport { FC, memo } from 'react';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nconst DragLayout: FC<IDragLayoutTypes> = ({ children, ...props }) => {\n  const ResponsiveLayout = WidthProvider(Responsive);\n  return (\n    <Box\n      sx={{\n        '& .react-grid-item.react-grid-placeholder': {\n          backgroundColor: 'transparent',\n          borderWidth: '3px',\n          borderStyle: 'dashed',\n          borderColor: 'primary.main',\n          borderRadius: '20px',\n        },\n      }}\n    >\n      <ResponsiveLayout\n        breakpoints={{ xxs: 0, xs: 600, sm: 960, md: 1366, lg: 1920 }}\n        {...props}\n      >\n        {children}\n      </ResponsiveLayout>\n    </Box>\n  );\n};\n\nexport default memo(DragLayout);\n","import { Box } from '@mui/material';\nimport { FC, forwardRef, memo } from 'react';\nimport { useAppSelector } from 'store';\n\nconst NeuBox: FC<INeuBoxProps> = forwardRef(\n  ({ children, style, className, ...props }, ref) => {\n    const { darkMode } = useAppSelector((st) => st.ui);\n    return (\n      <Box\n        style={style}\n        className={className}\n        sx={{\n          width: '100%',\n          height: '100%',\n          p: '10px',\n          transition: 'all 250ms',\n          boxShadow: darkMode\n            ? '16px 16px 32px #0e152e, -16px -16px 32px #141d3e'\n            : '16px 16px 32px #cccfd4,-16px -16px 32px #ffffff',\n          borderRadius: 2,\n          backgroundColor: 'background.default',\n          '& .react-resizable-handle': {\n            bottom: '4px!important',\n            right: '4px!important',\n          },\n        }}\n        component='div'\n        ref={ref}\n        {...props}\n      >\n        {children}\n      </Box>\n    );\n  }\n);\n\nexport default memo(NeuBox);\n","import { FC, memo } from 'react';\nimport ValueWidget from 'UI/atoms/ValueWidget/ValueWidget';\nimport AgentsTable from 'UI/molecules/AgentsTable/AgentsTable';\nimport TotalGraph from 'UI/molecules/TotalGraph/TotalGraph';\nimport DragLayout from 'UI/templates/DragLayout/DragLayout';\nimport NeuBox from 'UI/templates/NeuBox/NeuBox';\n\nconst HomeDashboardLayout: FC<IHomeDashboardLayoutProps> = ({\n  layouts,\n  handleLayouts,\n}) => (\n  <DragLayout\n    cols={{ xxs: 1, xs: 2, sm: 3, md: 3, lg: 4 }}\n    margin={[30, 30]}\n    rowHeight={175}\n    isBounded\n    layouts={layouts}\n    onLayoutChange={handleLayouts}\n    measureBeforeMount\n  >\n    <NeuBox key='widget-1'>\n      <ValueWidget title='Widget title' value={1277} unit='$' />\n    </NeuBox>\n    <NeuBox key='widget-2'>\n      <ValueWidget title='Widget title' value={44} unit='B' />\n    </NeuBox>\n    <NeuBox key='widget-3'>\n      <ValueWidget title='Widget title' value={32.324} unit='%' />\n    </NeuBox>\n    <NeuBox key='widget-chart'>\n      <TotalGraph />\n    </NeuBox>\n    <NeuBox key='widget-table'>\n      <AgentsTable />\n    </NeuBox>\n  </DragLayout>\n);\n\nexport default memo(HomeDashboardLayout);\n","import { FC, memo, useCallback } from 'react';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport {\n  cacheHomeLayout,\n  clearCacheHomeLayout,\n  homeLayoutsSelector,\n} from 'store/UI';\nimport { isEqual } from 'lodash';\nimport { cleanUndef } from 'lib/clearUndef';\nimport HomeDashboardLayout from './HomeDashboardLayout';\n\nconst HomeDashboard: FC = () => {\n  const dispatch = useAppDispatch();\n  const homeLayouts = useAppSelector(homeLayoutsSelector);\n  const handleLayouts = useCallback(\n    (curr, allLayouts: ReactGridLayout.Layouts) => {\n      cleanUndef(allLayouts);\n      if (isEqual(homeLayouts, allLayouts)) {\n        dispatch(clearCacheHomeLayout());\n        return;\n      }\n      dispatch(cacheHomeLayout(allLayouts));\n    },\n    [dispatch, homeLayouts]\n  );\n\n  return (\n    <HomeDashboardLayout layouts={homeLayouts} handleLayouts={handleLayouts} />\n  );\n};\n\nexport default memo(HomeDashboard);\n","import { FC, memo } from 'react';\nimport HomeDashboard from 'UI/organisms/HomeDashboard/HomeDashboard';\nimport HelmetTitle from '../../UI/atoms/Helmet/Helmet';\n\nconst Home: FC = () => (\n  <>\n    <HelmetTitle title='Home' />\n    <HomeDashboard />\n  </>\n);\n\nexport default memo(Home);\n"],"names":["cleanUndef","obj","Array","isArray","forEach","item","Object","keys","key","styles","root","position","right","top","transform","opacity","userSelect","WaterMark","Typography","sx","memo","width","height","display","flexDirection","title","fontSize","fontWeight","divider","mt","borderColor","content","justifyContent","value","ValueWidget","unit","printValue","useMemo","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","Box","Divider","border","borderRadius","pr","background","bgcolor","transition","header","mb","AgentsTable","data","mock","ButtonGroup","size","color","Button","onMouseDown","e","stopPropagation","fillHeight","virtualized","align","fixed","dataKey","minWidth","flexGrow","wrapper","TotalGraph","processData","useCallback","id","d","x","Date","timestamp","y","sort","a","b","getTime","totalData","margin","bottom","left","xScale","type","format","precision","yScale","stacked","min","max","yFormat","xFormat","curve","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","tickValues","enableGridX","colors","scheme","lineWidth","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","DragLayout","children","props","ResponsiveLayout","WidthProvider","Responsive","backgroundColor","borderWidth","borderStyle","breakpoints","xxs","xs","sm","md","lg","NeuBox","forwardRef","ref","className","darkMode","useAppSelector","st","ui","p","boxShadow","component","HomeDashboardLayout","layouts","handleLayouts","cols","rowHeight","isBounded","onLayoutChange","measureBeforeMount","HomeDashboard","dispatch","useAppDispatch","homeLayouts","homeLayoutsSelector","curr","allLayouts","isEqual","clearCacheHomeLayout","cacheHomeLayout","Home","Helmet"],"sourceRoot":""}